//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace D3FOUploadService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CallContext", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class CallContext : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CompanyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LanguageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PartitionKeyField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Company {
            get {
                return this.CompanyField;
            }
            set {
                if ((object.ReferenceEquals(this.CompanyField, value) != true)) {
                    this.CompanyField = value;
                    this.RaisePropertyChanged("Company");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Language {
            get {
                return this.LanguageField;
            }
            set {
                if ((object.ReferenceEquals(this.LanguageField, value) != true)) {
                    this.LanguageField = value;
                    this.RaisePropertyChanged("Language");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageId {
            get {
                return this.MessageIdField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageIdField, value) != true)) {
                    this.MessageIdField = value;
                    this.RaisePropertyChanged("MessageId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PartitionKey {
            get {
                return this.PartitionKeyField;
            }
            set {
                if ((object.ReferenceEquals(this.PartitionKeyField, value) != true)) {
                    this.PartitionKeyField = value;
                    this.RaisePropertyChanged("PartitionKey");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Infolog", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class Infolog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private D3FOUploadService.InfologEntry[] EntriesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public D3FOUploadService.InfologEntry[] Entries {
            get {
                return this.EntriesField;
            }
            set {
                if ((object.ReferenceEquals(this.EntriesField, value) != true)) {
                    this.EntriesField = value;
                    this.RaisePropertyChanged("Entries");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologEntry", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class InfologEntry : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private D3FOUploadService.InfologType TypeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public D3FOUploadService.InfologType Type {
            get {
                return this.TypeField;
            }
            set {
                if ((this.TypeField.Equals(value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="InfologType", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    public enum InfologType : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Info = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Warning = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Error = 2,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
    [System.SerializableAttribute()]
    public partial class Fault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExceptionTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid RequestIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionMessage {
            get {
                return this.ExceptionMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionMessageField, value) != true)) {
                    this.ExceptionMessageField = value;
                    this.RaisePropertyChanged("ExceptionMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExceptionType {
            get {
                return this.ExceptionTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.ExceptionTypeField, value) != true)) {
                    this.ExceptionTypeField = value;
                    this.RaisePropertyChanged("ExceptionType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid RequestId {
            get {
                return this.RequestIdField;
            }
            set {
                if ((this.RequestIdField.Equals(value) != true)) {
                    this.RequestIdField = value;
                    this.RaisePropertyChanged("RequestId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="eis", ConfigurationName="D3FOUploadService.EISUploadService")]
    public interface EISUploadService {
        
        // CODEGEN: Generating message contract since message UploadDoc has headers
        [System.ServiceModel.OperationContractAttribute(Action="eis/EISUploadService/UploadDoc", ReplyAction="eis/EISUploadService/UploadDocResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(D3FOUploadService.Fault), Action="eis/EISUploadService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        D3FOUploadService.UploadDocResponse UploadDoc(D3FOUploadService.UploadDoc request);
        
        [System.ServiceModel.OperationContractAttribute(Action="eis/EISUploadService/UploadDoc", ReplyAction="eis/EISUploadService/UploadDocResponse")]
        System.Threading.Tasks.Task<D3FOUploadService.UploadDocResponse> UploadDocAsync(D3FOUploadService.UploadDoc request);
        
        // CODEGEN: Generating message contract since message UploadDocV2 has headers
        [System.ServiceModel.OperationContractAttribute(Action="eis/EISUploadService/UploadDocV2", ReplyAction="eis/EISUploadService/UploadDocV2Response")]
        [System.ServiceModel.FaultContractAttribute(typeof(D3FOUploadService.Fault), Action="eis/EISUploadService/Fault", Name="Fault", Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        D3FOUploadService.UploadDocV2Response UploadDocV2(D3FOUploadService.UploadDocV2 request);
        
        [System.ServiceModel.OperationContractAttribute(Action="eis/EISUploadService/UploadDocV2", ReplyAction="eis/EISUploadService/UploadDocV2Response")]
        System.Threading.Tasks.Task<D3FOUploadService.UploadDocV2Response> UploadDocV2Async(D3FOUploadService.UploadDocV2 request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDoc", WrapperNamespace="eis", IsWrapped=true)]
    public partial class UploadDoc {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public D3FOUploadService.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="eis", Order=0)]
        public string diWS_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="eis", Order=1)]
        public string[] l;
        
        public UploadDoc() {
        }
        
        public UploadDoc(D3FOUploadService.CallContext CallContext, string diWS_ID, string[] l) {
            this.CallContext = CallContext;
            this.diWS_ID = diWS_ID;
            this.l = l;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocResponse", WrapperNamespace="eis", IsWrapped=true)]
    public partial class UploadDocResponse {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public D3FOUploadService.Infolog Infolog;
        
        public UploadDocResponse() {
        }
        
        public UploadDocResponse(D3FOUploadService.Infolog Infolog) {
            this.Infolog = Infolog;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocV2", WrapperNamespace="eis", IsWrapped=true)]
    public partial class UploadDocV2 {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public D3FOUploadService.CallContext CallContext;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="eis", Order=0)]
        public string Content;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="eis", Order=1)]
        public string diWS_ID;
        
        public UploadDocV2() {
        }
        
        public UploadDocV2(D3FOUploadService.CallContext CallContext, string Content, string diWS_ID) {
            this.CallContext = CallContext;
            this.Content = Content;
            this.diWS_ID = diWS_ID;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDocV2Response", WrapperNamespace="eis", IsWrapped=true)]
    public partial class UploadDocV2Response {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://schemas.microsoft.com/dynamics/2013/01/datacontracts")]
        public D3FOUploadService.Infolog Infolog;
        
        public UploadDocV2Response() {
        }
        
        public UploadDocV2Response(D3FOUploadService.Infolog Infolog) {
            this.Infolog = Infolog;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EISUploadServiceChannel : D3FOUploadService.EISUploadService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EISUploadServiceClient : System.ServiceModel.ClientBase<D3FOUploadService.EISUploadService>, D3FOUploadService.EISUploadService {
        
        public EISUploadServiceClient() {
        }
        
        public EISUploadServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EISUploadServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EISUploadServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EISUploadServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        D3FOUploadService.UploadDocResponse D3FOUploadService.EISUploadService.UploadDoc(D3FOUploadService.UploadDoc request) {
            return base.Channel.UploadDoc(request);
        }
        
        public D3FOUploadService.Infolog UploadDoc(D3FOUploadService.CallContext CallContext, string diWS_ID, string[] l) {
            D3FOUploadService.UploadDoc inValue = new D3FOUploadService.UploadDoc();
            inValue.CallContext = CallContext;
            inValue.diWS_ID = diWS_ID;
            inValue.l = l;
            D3FOUploadService.UploadDocResponse retVal = ((D3FOUploadService.EISUploadService)(this)).UploadDoc(inValue);
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<D3FOUploadService.UploadDocResponse> D3FOUploadService.EISUploadService.UploadDocAsync(D3FOUploadService.UploadDoc request) {
            return base.Channel.UploadDocAsync(request);
        }
        
        public System.Threading.Tasks.Task<D3FOUploadService.UploadDocResponse> UploadDocAsync(D3FOUploadService.CallContext CallContext, string diWS_ID, string[] l) {
            D3FOUploadService.UploadDoc inValue = new D3FOUploadService.UploadDoc();
            inValue.CallContext = CallContext;
            inValue.diWS_ID = diWS_ID;
            inValue.l = l;
            return ((D3FOUploadService.EISUploadService)(this)).UploadDocAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        D3FOUploadService.UploadDocV2Response D3FOUploadService.EISUploadService.UploadDocV2(D3FOUploadService.UploadDocV2 request) {
            return base.Channel.UploadDocV2(request);
        }
        
        public D3FOUploadService.Infolog UploadDocV2(D3FOUploadService.CallContext CallContext, string Content, string diWS_ID) {
            D3FOUploadService.UploadDocV2 inValue = new D3FOUploadService.UploadDocV2();
            inValue.CallContext = CallContext;
            inValue.Content = Content;
            inValue.diWS_ID = diWS_ID;
            D3FOUploadService.UploadDocV2Response retVal = ((D3FOUploadService.EISUploadService)(this)).UploadDocV2(inValue);
            return retVal.Infolog;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<D3FOUploadService.UploadDocV2Response> D3FOUploadService.EISUploadService.UploadDocV2Async(D3FOUploadService.UploadDocV2 request) {
            return base.Channel.UploadDocV2Async(request);
        }
        
        public System.Threading.Tasks.Task<D3FOUploadService.UploadDocV2Response> UploadDocV2Async(D3FOUploadService.CallContext CallContext, string Content, string diWS_ID) {
            D3FOUploadService.UploadDocV2 inValue = new D3FOUploadService.UploadDocV2();
            inValue.CallContext = CallContext;
            inValue.Content = Content;
            inValue.diWS_ID = diWS_ID;
            return ((D3FOUploadService.EISUploadService)(this)).UploadDocV2Async(inValue);
        }
    }
}
