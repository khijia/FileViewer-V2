//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FileViewer.BCUploadService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/EISUploadWebService2", ConfigurationName="BCUploadService.EISUploadWebService2_Port")]
    public interface EISUploadWebService2_Port {
        
        // CODEGEN: Generating message contract since the wrapper name (UploadDoc_Result) of message UploadDoc_Result does not match the default value (UploadDoc)
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/EISUploadWebService2:UploadDoc", ReplyAction="*")]
        BCUploadService.UploadDoc_Result UploadDoc(BCUploadService.UploadDoc request);
        
        [System.ServiceModel.OperationContractAttribute(Action="urn:microsoft-dynamics-schemas/codeunit/EISUploadWebService2:UploadDoc", ReplyAction="*")]
        System.Threading.Tasks.Task<BCUploadService.UploadDoc_Result> UploadDocAsync(BCUploadService.UploadDoc request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDoc", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/EISUploadWebService2", IsWrapped=true)]
    public partial class UploadDoc {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/EISUploadWebService2", Order=0)]
        public string diWS_ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/EISUploadWebService2", Order=1)]
        public string l;
        
        public UploadDoc() {
        }
        
        public UploadDoc(string diWS_ID, string l) {
            this.diWS_ID = diWS_ID;
            this.l = l;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="UploadDoc_Result", WrapperNamespace="urn:microsoft-dynamics-schemas/codeunit/EISUploadWebService2", IsWrapped=true)]
    public partial class UploadDoc_Result {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="urn:microsoft-dynamics-schemas/codeunit/EISUploadWebService2", Order=0)]
        public string return_value;
        
        public UploadDoc_Result() {
        }
        
        public UploadDoc_Result(string return_value) {
            this.return_value = return_value;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EISUploadWebService2_PortChannel : BCUploadService.EISUploadWebService2_Port, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EISUploadWebService2_PortClient : System.ServiceModel.ClientBase<BCUploadService.EISUploadWebService2_Port>, BCUploadService.EISUploadWebService2_Port {
        
        public EISUploadWebService2_PortClient() {
        }
        
        public EISUploadWebService2_PortClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EISUploadWebService2_PortClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EISUploadWebService2_PortClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EISUploadWebService2_PortClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        BCUploadService.UploadDoc_Result BCUploadService.EISUploadWebService2_Port.UploadDoc(BCUploadService.UploadDoc request) {
            return base.Channel.UploadDoc(request);
        }
        
        public string UploadDoc(string diWS_ID, string l) {
            BCUploadService.UploadDoc inValue = new BCUploadService.UploadDoc();
            inValue.diWS_ID = diWS_ID;
            inValue.l = l;
            BCUploadService.UploadDoc_Result retVal = ((BCUploadService.EISUploadWebService2_Port)(this)).UploadDoc(inValue);
            return retVal.return_value;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<BCUploadService.UploadDoc_Result> BCUploadService.EISUploadWebService2_Port.UploadDocAsync(BCUploadService.UploadDoc request) {
            return base.Channel.UploadDocAsync(request);
        }
        
        public System.Threading.Tasks.Task<BCUploadService.UploadDoc_Result> UploadDocAsync(string diWS_ID, string l) {
            BCUploadService.UploadDoc inValue = new BCUploadService.UploadDoc();
            inValue.diWS_ID = diWS_ID;
            inValue.l = l;
            return ((BCUploadService.EISUploadWebService2_Port)(this)).UploadDocAsync(inValue);
        }
    }
}
